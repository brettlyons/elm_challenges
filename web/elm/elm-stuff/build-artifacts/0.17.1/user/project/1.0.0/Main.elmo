var _user$project$Main$circleMaker = F2(
	function (radius, pos) {
		return A2(
			_elm_lang$svg$Svg$circle,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$svg$Svg_Attributes$cx(
					_elm_lang$core$Basics$toString(
						_elm_lang$core$Basics$fst(pos))),
					_elm_lang$svg$Svg_Attributes$cy(
					_elm_lang$core$Basics$toString(
						_elm_lang$core$Basics$snd(pos))),
					_elm_lang$svg$Svg_Attributes$r(
					_elm_lang$core$Basics$toString(radius)),
					_elm_lang$svg$Svg_Attributes$fill('#0B79CE')
				]),
			_elm_lang$core$Native_List.fromArray(
				[]));
	});
var _user$project$Main$smallCircleMaker = function (pos) {
	return A2(_user$project$Main$circleMaker, 10, pos);
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$svg$Svg$svg,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$svg$Svg_Attributes$width('400'),
				_elm_lang$svg$Svg_Attributes$height('400'),
				_elm_lang$svg$Svg_Attributes$viewBox('0 0 400 400')
			]),
		A2(_elm_lang$core$List$map, _user$project$Main$smallCircleMaker, model.circles));
};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {
		circles: _elm_lang$core$Native_List.fromArray(
			[])
	},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$Model = function (a) {
	return {circles: a};
};
var _user$project$Main$ButtonPress = function (a) {
	return {ctor: 'ButtonPress', _0: a};
};
var _user$project$Main$Tick = function (a) {
	return {ctor: 'Tick', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		_elm_lang$core$Native_List.fromArray(
			[
				A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second, _user$project$Main$Tick),
				_elm_lang$keyboard$Keyboard$presses(_user$project$Main$ButtonPress)
			]));
};
var _user$project$Main$NewCircle = function (a) {
	return {ctor: 'NewCircle', _0: a};
};
var _user$project$Main$getRandomPos = F3(
	function (min, maxWidth, maxHeight) {
		return A2(
			_elm_lang$core$Random$generate,
			_user$project$Main$NewCircle,
			A2(
				_elm_lang$core$Random$pair,
				A2(_elm_lang$core$Random$int, min, maxWidth),
				A2(_elm_lang$core$Random$int, min, maxHeight)));
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'NewCircle':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							circles: A2(_elm_lang$core$List_ops['::'], _p0._0, model.circles)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Tick':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A3(_user$project$Main$getRandomPos, 10, 380, 380)
				};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})
};
